# 🎯 Claude Code Profiles 配置示例
# 📍 位置: ~/.ccr/platforms/claude/profiles.toml
#
# 此文件管理 Claude Code 平台的多个配置 profiles
# 每个 profile 代表一个独立的 API 配置
#
# 注意: CCR 原本是为管理 Claude Code 配置而设计的，
#       现已扩展支持多平台。Legacy 模式仍使用 ~/.ccs_config.toml

# ═══════════════════════════════════════════════════════════
# Anthropic Official (默认)
# ═══════════════════════════════════════════════════════════
[anthropic]
description = "Anthropic Official API"
base_url = "https://api.anthropic.com"
auth_token = "sk-ant-api03-xxxxxxxxxxxxxxxxxxxx"
model = "claude-sonnet-4-5-20250929"
small_fast_model = "claude-3-5-haiku-20241022"

# 可选字段
provider = "Anthropic"
provider_type = "official"
account = "your-anthropic-account"
tags = ["official", "production"]

# ═══════════════════════════════════════════════════════════
# AWS Bedrock (企业版)
# ═══════════════════════════════════════════════════════════
[bedrock]
description = "Claude via AWS Bedrock"
base_url = "https://bedrock-runtime.us-east-1.amazonaws.com"
auth_token = "AKIAIOSFODNN7EXAMPLE"  # AWS Access Key (需配合 Secret Key)
model = "anthropic.claude-3-5-sonnet-20241022-v2:0"
small_fast_model = "anthropic.claude-3-haiku-20240307-v1:0"

provider = "AWS Bedrock"
provider_type = "enterprise"
account = "aws-account-id"
tags = ["enterprise", "aws", "bedrock"]

# AWS 特定配置
aws_region = "us-east-1"
aws_secret_key = "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"

# ═══════════════════════════════════════════════════════════
# Google Vertex AI (GCP)
# ═══════════════════════════════════════════════════════════
[vertex-ai]
description = "Claude via Google Vertex AI"
base_url = "https://us-central1-aiplatform.googleapis.com/v1"
auth_token = "ya29.xxxxxxxxxxxxxxxxxxxxxx"  # OAuth 2.0 Token
model = "claude-3-5-sonnet@20241022"
small_fast_model = "claude-3-haiku@20240307"

provider = "Google Vertex AI"
provider_type = "enterprise"
account = "gcp-project-id"
tags = ["enterprise", "gcp", "vertex-ai"]

# GCP 特定配置
project_id = "my-gcp-project"
location = "us-central1"

# ═══════════════════════════════════════════════════════════
# Third-Party Proxies (第三方代理)
# ═══════════════════════════════════════════════════════════
[openrouter]
description = "Claude via OpenRouter"
base_url = "https://openrouter.ai/api/v1"
auth_token = "sk-or-v1-xxxxxxxxxxxxxxxxxxxxxxxx"
model = "anthropic/claude-3.5-sonnet"
small_fast_model = "anthropic/claude-3-haiku"

provider = "OpenRouter"
provider_type = "proxy"
tags = ["proxy", "openrouter"]

[poe]
description = "Claude via Poe API"
base_url = "https://api.poe.com/v1"
auth_token = "poe_xxxxxxxxxxxxxxxxxxxxxxxxxx"
model = "Claude-3.5-Sonnet"
small_fast_model = "Claude-3-Haiku"

provider = "Poe"
provider_type = "proxy"
tags = ["proxy", "poe"]

# ═══════════════════════════════════════════════════════════
# Local Development (本地开发)
# ═══════════════════════════════════════════════════════════
[dev]
description = "Local Development Mock API"
base_url = "http://localhost:8080/api/anthropic"
auth_token = "dev-token-1234567890"
model = "claude-mock"

provider = "Local"
provider_type = "development"
tags = ["dev", "local", "testing"]

# ═══════════════════════════════════════════════════════════
# 使用说明
# ═══════════════════════════════════════════════════════════
#
# 1. 确保当前在 Claude 平台:
#    ccr platform current
#    ccr platform switch claude  # 如果不在 Claude 平台
#
# 2. 切换 profile (Legacy 模式):
#    ccr switch anthropic
#
# 3. 切换 profile (Unified 模式，需要实现):
#    ccr claude switch bedrock
#
# 4. 查看所有 profiles:
#    ccr list  # Legacy 模式
#    ccr claude list  # Unified 模式
#
# 5. 添加新 profile:
#    ccr add  # Legacy 模式，交互式
#    ccr claude add my-profile  # Unified 模式
#
# 字段说明:
#   - description: Profile 描述（可选）
#   - base_url: API 基础 URL（必需）
#   - auth_token: 认证令牌/API Key（必需）
#   - model: 默认使用的主模型（必需）
#   - small_fast_model: 快速小模型（可选，用于简单任务）
#   - provider: 提供商名称（可选）
#   - provider_type: 提供商类型（可选）
#     * official: 官方 API
#     * enterprise: 企业服务 (AWS/GCP)
#     * proxy: 第三方代理
#     * development: 开发环境
#   - account: 账号标识（可选）
#   - tags: 标签列表（可选，用于分类和筛选）
#   - 其他字段: 平台特定的扩展字段（可选）
#
# Claude 平台特定字段:
#   - aws_region: AWS 区域 (Bedrock)
#   - aws_secret_key: AWS Secret Key (Bedrock，敏感信息)
#   - project_id: GCP 项目 ID (Vertex AI)
#   - location: GCP 区域 (Vertex AI)
#
# 注意事项:
#   - auth_token 和 aws_secret_key 是敏感信息，请妥善保管
#   - 日志和历史记录中的敏感信息会被自动掩码（显示为 sk-ant-***）
#   - Claude Code 的实际配置写入 ~/.claude/settings.json
#   - Legacy 模式使用 ~/.ccs_config.toml（兼容 CCS 工具）
#   - Unified 模式使用 ~/.ccr/ 目录结构
#
# 模型推荐:
#   - 主模型: claude-sonnet-4-5-20250929 (最新，平衡性能和成本)
#   - 快速模型: claude-3-5-haiku-20241022 (快速响应，低成本)
#   - 高级模型: claude-opus-3-20240229 (最强能力，高成本)
