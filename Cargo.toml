[package]
name = "ccr"
version = "2.3.1"
edition = "2024"
authors = [
    "Yonghang Li"
]
description = "Claude Code Configuration Switcher(Rust implementation)"
license = "MIT"

[lib]
name = "ccr"
path = "src/lib.rs"

[[bin]]
name = "ccr"
path = "src/main.rs"

[dependencies]
# CLI 参数解析
clap = { version = "4.5.50", features = ["derive", "cargo"] }

# 序列化与配置解析
serde = { version = "1.0.228", features = ["derive"] }
serde_json = "1.0.145"
toml = "0.9.8"
indexmap = { version = "2.12", features = ["serde"] }

# 错误处理
anyhow = "1.0.100"
thiserror = "2.0.17"

# 跨平台用户目录
dirs = "6.0.0"

# 文件锁
fs4 = "0.13.1"

# 临时文件与原子写入
tempfile = "3.23"

# 文件时间操作
filetime = "0.2"

# 日志记录
log = "0.4.28"
env_logger = "0.11.8"

# 彩色终端输出
colored = "3.0.0"

# TUI 框架 (可选功能)
ratatui = { version = "0.29", optional = true }
crossterm = { version = "0.29.0", optional = true }

# 表格展示
comfy-table = "7.2"

# 时间戳与格式化
chrono = { version = "0.4.42", features = ["serde"] }

# 当前操作者识别
whoami = "1.6"

# UUID生成
uuid = { version = "1.18.1", features = ["v4", "serde"] }

# HTTP 服务器 (用于 web 界面 - 可选功能)
# 🎯 异步 Web 框架 - 高性能并发处理（优化features以加快编译）
tokio = { version = "1.48", features = ["rt-multi-thread", "net", "io-util", "time", "macros", "signal", "sync"], optional = true }
axum = { version = "0.8.6", default-features = false, features = ["json", "tokio", "http1"], optional = true }
tower = { version = "0.5.2", default-features = false, optional = true }
tower-http = { version = "0.6.6", default-features = false, features = ["cors"], optional = true }

# 自动打开浏览器 (web 功能)
open = { version = "5.3", optional = true }

# 系统信息获取 (web 功能)
sysinfo = { version = "0.37.2", optional = true }

# 并行处理
rayon = "1.11"

# WebDAV 客户端 (用于配置同步)
reqwest_dav = "0.2"

# UI 启动相关依赖
reqwest = { version = "0.12.24", features = ["blocking", "json"] }  # HTTP 客户端
dialoguer = "0.12.0"                                                  # 交互式提示
flate2 = "1.1.5"                                                      # gzip 压缩/解压

[features]
# 默认启用 web 和 tui 功能，保持向后兼容
default = ["web", "tui"]

# Web API 服务器功能
# 包含：Axum web 框架、Tokio 异步运行时、系统信息缓存
web = ["dep:tokio", "dep:axum", "dep:tower", "dep:tower-http", "dep:open", "dep:sysinfo"]

# 终端用户界面功能
# 包含：Ratatui TUI 框架、Crossterm 终端控制
tui = ["dep:ratatui", "dep:crossterm"]

# 🚀 开发性能优化配置
[profile.dev]
# 基本优化级别，在编译速度和运行速度之间取得平衡
opt-level = 1
# 启用增量编译（默认已启用，显式声明以便文档化）
incremental = true
# 减少调试信息生成，加快编译速度
debug = 1

# 🎯 依赖包在开发模式下使用更高优化
# 依赖包不会频繁修改，可以使用更高优化级别
[profile.dev.package."*"]
opt-level = 2

# 🧪 测试性能优化配置
[profile.test]
# 测试时使用基本优化，加快测试执行速度
opt-level = 1
# 继承 dev 的增量编译设置
inherits = "dev"

# 🏆 生产发布配置（最大优化）
[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true
